Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        backgroundColor: Color.fromARGB(255, 255, 185, 35),
        title: const Text('Add Reader'),
        centerTitle: true,
      ),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: SingleChildScrollView(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              children: [
                SizedBox(
                  height: 10,
                ),
                Obx(
                  () => SizedBox(
                    height: 50,
                    child: TextFormField(
                      // controller: nameController,
                      controller: readerPageController.nameController.value,
                      keyboardType: TextInputType.name,
                      decoration: InputDecoration(
                          border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(10)),
                          label: "Name".text.make()),
                    ),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: ageController,
                    keyboardType: TextInputType.number,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Age".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: mobileController,
                    keyboardType: TextInputType.phone,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Mobile".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: emailController,
                    keyboardType: TextInputType.emailAddress,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Email".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: addressController,
                    keyboardType: TextInputType.text,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Address".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: occupationController,
                    keyboardType: TextInputType.text,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Occupation".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: DateTimeField(
                    initialValue: readerPageController.selectedDate.value,
                    decoration: InputDecoration(
                      prefixIcon: Icon(Icons.calendar_month),
                      labelText: 'Registration Date',
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10)),
                    ),
                    onChanged: (newValue) {
                      if (newValue != null) {
                        readerPageController.selectedDate.value = newValue;
                      }
                    },
                    format: readerPageController.format,
                    onShowPicker: (context, currentValue) {
                      return showDatePicker(
                        context: context,
                        firstDate: DateTime(1900),
                        initialDate: currentValue ?? DateTime.now(),
                        lastDate: DateTime(2100),
                      );
                    },
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: nidController,
                    keyboardType: TextInputType.number,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "NID Number".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    readOnly: true,
                    initialValue: randomUserId.toString(),
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "User ID".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  child: TextFormField(
                    controller: pinController,
                    keyboardType: TextInputType.name,
                    decoration: InputDecoration(
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)),
                        label: "Pin".text.make()),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 60,
                  child: DropdownButtonFormField<String>(
                    value: readerPageController.selectedGender?.value,
                    onChanged: (String? newValue) {
                      if (newValue != null) {
                        readerPageController.selectedGender!.value = newValue;
                      }
                    },
                    items: <String>[
                      'Male',
                      'Female',
                    ].map<DropdownMenuItem<String>>((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
                    decoration: InputDecoration(
                      labelText: 'Select Gender',
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10)),
                    ),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 60,
                  child: DropdownButtonFormField<String>(
                    value: readerPageController.selectedStatus?.value,
                    onChanged: (String? newValue) {
                      if (newValue != null) {
                        readerPageController.selectedStatus!.value = newValue;
                      }
                    },
                    items: <String>[
                      'Active',
                      'Inactive',
                    ].map<DropdownMenuItem<String>>((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
                    decoration: InputDecoration(
                      labelText: 'Select User Status',
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10)),
                    ),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    Obx(
                      () {
                        if (readerPageController
                            .readerImageFile.value.path.isEmpty) {
                          return Icon(Icons.image, size: 100);
                        } else {
                          return Image.file(
                            readerPageController.readerImageFile.value,
                            width: 150,
                            height: 150,
                          );
                        }
                      },
                    ),
                    const SizedBox(height: 20),
                    TextButton(
                      child: Obx(
                        () => Text(
                          "${readerPageController.imageChooseText.value}",
                          style: TextStyle(fontSize: 20),
                        ),
                      ),
                      onPressed: () {
                        readerPageController.pickReaderImage();
                      },
                    ),
                  ],
                ),
                Divider(
                  color: const Color.fromARGB(255, 67, 67, 67),
                  height: 10,
                ),
                SizedBox(
                  height: 10,
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    Obx(
                      () {
                        if (readerPageController
                            .nidImageFile.value.path.isEmpty) {
                          return Icon(Icons.image, size: 100);
                        } else {
                          return Image.file(
                            readerPageController.nidImageFile.value,
                            width: 150,
                            height: 150,
                          );
                        }
                      },
                    ),
                    const SizedBox(height: 20),
                    TextButton(
                      child: Obx(
                        () => Text(
                          "${readerPageController.imageChooseText2.value}",
                          style: TextStyle(fontSize: 20),
                        ),
                      ),
                      onPressed: () {
                        readerPageController.pickNidImage();
                      },
                    ),
                  ],
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  width: MediaQuery.of(context).size.width,
                  child: ElevatedButton(
                      style: ButtonStyle(
                          shape: MaterialStatePropertyAll(
                              RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(10))),
                          backgroundColor: MaterialStatePropertyAll(
                            Color.fromARGB(255, 255, 185, 35),
                          )),
                      onPressed: () {
                        if (nameController.text.isEmpty) {
                          ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                              content: "Please enter name".text.make()));
                        } else if (ageController.text.isEmpty) {
                          ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                              content: "Please enter age".text.make()));
                        }
                      },
                      child: "Save".text.make()),
                ),
                SizedBox(
                  height: 10,
                ),
                SizedBox(
                  height: 50,
                  width: MediaQuery.of(context).size.width,
                  child: ElevatedButton(
                      style: ButtonStyle(
                          shape: MaterialStatePropertyAll(
                              RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(10))),
                          backgroundColor: MaterialStatePropertyAll(
                            Color.fromARGB(255, 255, 185, 35),
                          )),
                      onPressed: () {
                        Get.back();
                      },
                      child: "Cancel".text.make()),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  